<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="packetUtilityPortNo" elementType="Argument">
            <stringProp name="Argument.name">packetUtilityPortNo</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="packetUtilityServerIP" elementType="Argument">
            <stringProp name="Argument.name">packetUtilityServerIP</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="serverIP" elementType="Argument">
            <stringProp name="Argument.name">serverIP</stringProp>
            <stringProp name="Argument.value">api-internal.cellbox.mosip.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="serverPortNo" elementType="Argument">
            <stringProp name="Argument.name">serverPortNo</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="process" elementType="Argument">
            <stringProp name="Argument.name">process</stringProp>
            <stringProp name="Argument.value">NEW</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="contextKeyValue" elementType="Argument">
            <stringProp name="Argument.name">contextKeyValue</stringProp>
            <stringProp name="Argument.value">api-internal.cellbox.mosip.net_S2_context</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Load Context Details From File" enabled="true">
        <stringProp name="filename">./contextDetails.txt</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="variableNames">userID,machineID,centerID,password</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Load Document Path From File" enabled="true">
        <stringProp name="filename">./documentPath.txt</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">docPath</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Load Auth Token From File" enabled="true">
        <stringProp name="filename">./authorization_token_regproc.txt</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">authToken</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Packet Generation (Preparation)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Context Endpoint API" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;admin_zone_clientId&quot;: &quot;mosip-admin-client&quot;,&#xd;
  &quot;signPublicKey&quot;: &quot;MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnkuJmoLUkpO5nGlLs8nZdpdzMHsBv03DQTqBZzxNgmE6H1FGIupdQwAflmE68btbAzJmmwyvOBCbjtyntyP6Zaf1Z2dzV8olFlCPaBXDCgckJzIXxxQnGYzgRfjmCvywnvLAGochqQmimxGejtS+5thU0FX//0p1WU4Zi7pzptOLb4jrXCPoBMZ5sbCGycgMyml5Q5dNtRIvMUvw6zGXutU+9fYiVFQ3d0SdJMXk15ygXyydvRLaYZ7gUdoIu7nbFV1eONJbtmsi+OVZrdc2+UzPqTHVRr1ovYUTOkm7Kz39QmlxeRo8Aos3keCIgjZTl/zH+nFJwQLm+STiLhEkiwIDAQAB&quot;,&#xd;
  &quot;mosip_regproc_client_secret&quot;: &quot;OxRqifxmhy4OS9Rj&quot;,&#xd;
  &quot;FetchDeviceSpec_lang_URI&quot;: &quot;/v1/masterdata/devicespecifications/{langcode}&quot;,&#xd;
  &quot;mosip.test.persona.locationsdatapath&quot;: &quot;/profile_resource/location_data&quot;,&#xd;
  &quot;partnerUrlSuffix&quot;: &quot;oYf63Lax0DY2QkYMRHnrmDqhmO3RMWQagwm0ftgLlkuin1KOND/666/576732&quot;,&#xd;
  &quot;mosip.test.persona.datapath&quot;: &quot;/profile_resource/&quot;,&#xd;
  &quot;partner_user_password&quot;: &quot;mosip123&quot;,&#xd;
  &quot;Male&quot;: &quot;MLE&quot;,&#xd;
  &quot;getUserHistory&quot;: &quot;/v1/masterdata/users/{id}/{eff_dtimes}&quot;,&#xd;
  &quot;FetchRejectionReason_URI&quot;: &quot;/v1/masterdata/packetrejectionreasons/{reasoncategorycode}/{langcode}&quot;,&#xd;
  &quot;eSignetDeployed&quot;: &quot;yes&quot;,&#xd;
  &quot;userid&quot;: &quot;kido1&quot;,&#xd;
  &quot;push-reports-to-s3&quot;: &quot;yes&quot;,&#xd;
  &quot;FetchRegCentHolidays_URI&quot;: &quot;/v1/masterdata/getregistrationcenterholidays/{langcode}/{registrationcenterid}/{year}&quot;,&#xd;
  &quot;decrypt_URI&quot;: &quot;/v1/keymanager/decrypt&quot;,&#xd;
  &quot;mosip_resident_client_id&quot;: &quot;mosip-resident-client&quot;,&#xd;
  &quot;s3-region&quot;: &quot;&quot;,&#xd;
  &quot;db-server&quot;: &quot;api-internal.cellbox.mosip.net&quot;,&#xd;
  &quot;mosip_pms_app_id&quot;: &quot;partner&quot;,&#xd;
  &quot;syncConf&quot;: &quot;/v1/syncdata/configs&quot;,&#xd;
  &quot;getRoles&quot;: &quot;/v1/syncdata/roles&quot;,&#xd;
  &quot;admin_zone_clientSecret&quot;: &quot;E4386XMrYOvoHMJ5&quot;,&#xd;
  &quot;FetchApplication_URI&quot;: &quot;/v1/masterdata/applicationtypes&quot;,&#xd;
  &quot;langselect&quot;: &quot;0&quot;,&#xd;
  &quot;fetchAllTemplate&quot;: &quot;/v1/masterdata/templates/templatetypecodes/{code}&quot;,&#xd;
  &quot;s3-host&quot;: &quot;http://minio.minio:9000&quot;,&#xd;
  &quot;invalidEncryptedHashFlag&quot;: &quot;&quot;,&#xd;
  &quot;FetchTitle_URI&quot;: &quot;/v1/masterdata/title/{langcode}&quot;,&#xd;
  &quot;scenariosToSkip&quot;: &quot;S-AFTER_SUITE,S-157&quot;,&#xd;
  &quot;admin_zone_password&quot;: &quot;mosip123&quot;,&#xd;
  &quot;FetchRegCent_id_lang_URI&quot;: &quot;/v1/masterdata/registrationcenters/{id}/{langcode}&quot;,&#xd;
  &quot;mosip_regprocclient_app_id&quot;: &quot;regproc&quot;,&#xd;
  &quot;ConfigParameters&quot;: &quot;mosip.kernel.rid.length,mosip.kernel.uin.length,mosip.kernel.sms.country.code,mosip.kernel.sms.number.length,mosip.kernel.otp.default-length,mosip.kernel.otp.expiry-time,mosip.kernel.otp.key-freeze-time,mosip.kernel.otp.validation-attempt-threshold,mosip.kernel.otp.min-key-length,mosip.kernel.otp.max-key-length,mosip.kernel.licensekey.length,mosip.supported-languages&quot;,&#xd;
  &quot;fetchmapLicenseKey&quot;: &quot;/v1/keymanager/license/permission&quot;,&#xd;
  &quot;useExternalScenarioSheet&quot;: &quot;no&quot;,&#xd;
  &quot;getusersBasedOnRegCenter&quot;: &quot;/v1/syncdata/userdetails/{regid}&quot;,&#xd;
  &quot;actuatorIDAEndpoint&quot;: &quot;/idauthentication/v1/actuator/env&quot;,&#xd;
  &quot;FetchLocationHierarchy_URI_hierarchyname&quot;: &quot;/v1/masterdata/locations/locationhierarchy/{hierarchyname}&quot;,&#xd;
  &quot;audit_username&quot;: &quot;postgres&quot;,&#xd;
  &quot;auditLog_URI&quot;: &quot;/v1/auditmanager/audits&quot;,&#xd;
  &quot;eSignetbaseurl&quot;: &quot;https://api.cellbox.mosip.net&quot;,&#xd;
  &quot;tokenEndpoint&quot;: &quot;/v1/esignet/oauth/token&quot;,&#xd;
  &quot;admin_userName&quot;: &quot;kido0&quot;,&#xd;
  &quot;FetchRegcentMachUserMaping_URI&quot;: &quot;/v1/masterdata/getregistrationmachineusermappinghistory/{effdtimes}/{registrationcenterid}/{machineid}/{userid}&quot;,&#xd;
  &quot;machineid&quot;: &quot;13670&quot;,&#xd;
  &quot;scenario&quot;: &quot;2:Resident walk-ins to registration center completes the process and gets UIN card&quot;,&#xd;
  &quot;partner_userName&quot;: &quot;111997&quot;,&#xd;
  &quot;Female&quot;: &quot;FLE&quot;,&#xd;
  &quot;FetchApplication_lang_URI&quot;: &quot;/v1/masterdata/applicationtypes/{langcode}&quot;,&#xd;
  &quot;uin&quot;: &quot;UIN&quot;,&#xd;
  &quot;show_sql&quot;: &quot;true&quot;,&#xd;
  &quot;hibernate.connection.driver_class&quot;: &quot;org.postgresql.Driver&quot;,&#xd;
  &quot;pmsAuthInternal&quot;: &quot;true&quot;,&#xd;
  &quot;FetchDevice_lang_URI&quot;: &quot;/v1/masterdata/devices/{languagecode}&quot;,&#xd;
  &quot;FetchDocumentCategories_URI_withcodeAndLangCode&quot;: &quot;/v1/masterdata/documentcategories/{code}/{langcode}&quot;,&#xd;
  &quot;usePreConfiguredEmail&quot;: &quot;prereg-dsl9@gmail.com&quot;,&#xd;
  &quot;pool_size&quot;: &quot;1&quot;,&#xd;
  &quot;actuatorRegprocEndpoint&quot;: &quot;/registrationprocessor/v1/registrationtransaction/actuator/env&quot;,&#xd;
  &quot;FetchMachineHistory_URI&quot;: &quot;/v1/masterdata/machineshistories/{id}/{langcode}/{effdatetimes}&quot;,&#xd;
  &quot;mosip_reg_client_id&quot;: &quot;mosip-reg-client&quot;,&#xd;
  &quot;bulkUploadUrl&quot;: &quot;/v1/admin/bulkupload&quot;,&#xd;
  &quot;new_Resident_User&quot;: &quot;111995&quot;,&#xd;
  &quot;email_otp&quot;: &quot;111111&quot;,&#xd;
  &quot;mosip_idrepo_app_id&quot;: &quot;idrepo&quot;,&#xd;
  &quot;esignetMockBaseURL&quot;: &quot;esignet-insurance.&quot;,&#xd;
  &quot;keycloakAuthURL&quot;: &quot;/auth/realms/master/protocol/openid-connect/token&quot;,&#xd;
  &quot;packetUtilityBaseUrl&quot;: &quot;http://packetcreator.packetcreator/v1/packetcreator&quot;,&#xd;
  &quot;zoneNameUrl&quot;: &quot;/v1/masterdata/zones/zonename&quot;,&#xd;
  &quot;FetchRegCent_URI&quot;: &quot;/v1/masterdata/registrationcenters&quot;,&#xd;
  &quot;mosip.test.persona.facedatapath&quot;: &quot;/profile_resource/face_data&quot;,&#xd;
  &quot;Other&quot;: &quot;OTH&quot;,&#xd;
  &quot;sendOtp&quot;: &quot;/v1/authmanager/authenticate/sendotp&quot;,&#xd;
  &quot;dialect&quot;: &quot;org.hibernate.dialect.PostgreSQLDialect&quot;,&#xd;
  &quot;partner_username&quot;: &quot;postgres&quot;,&#xd;
  &quot;DB_PORT&quot;: &quot;&quot;,&#xd;
  &quot;audit_url&quot;: &quot;jdbc:postgresql://api-internal.dev2.mosip.net:30090/mosip_audit&quot;,&#xd;
  &quot;s3-account&quot;: &quot;dslreports&quot;,&#xd;
  &quot;mosip.test.persona.templatesdatapath&quot;: &quot;/profile_resource/templates_data&quot;,&#xd;
  &quot;FetchDevice_id_lang_URI&quot;: &quot;/v1/masterdata/devices/{languagecode}/{deviceType}&quot;,&#xd;
  &quot;syncMdatawithRegCentIdKeyIndex&quot;: &quot;/v1/syncdata/clientsettings/{regcenterid}&quot;,&#xd;
  &quot;userzonecode&quot;: &quot;TZT&quot;,&#xd;
  &quot;mountPathForScenario&quot;: &quot;/home/mosip/mountvolume/&quot;,&#xd;
  &quot;introducerBiometrics&quot;: &quot;introducerBiometrics&quot;,&#xd;
  &quot;updatePreRegStatus&quot;: &quot;preregistration/v1/applications/prereg/status/&quot;,&#xd;
  &quot;FetchDocumentCategories_URI&quot;: &quot;/v1/masterdata/documentcategories/{langcode}&quot;,&#xd;
  &quot;validateGenderByName&quot;: &quot;/v1/masterdata/gendertypes/validate/{gendername}&quot;,&#xd;
  &quot;mosip_idrepo_client_id&quot;: &quot;mosip-idrepo-client&quot;,&#xd;
  &quot;mosip.test.regclient.supervisorid&quot;: &quot;kido1&quot;,&#xd;
  &quot;FetchHolidays_id_lang_URI&quot;: &quot;/v1/masterdata/holidays/{holidayid}/{langcode}&quot;,&#xd;
  &quot;FetchGenderType_id_lang_URI&quot;: &quot;/v1/masterdata/gendertypes/{langcode}&quot;,&#xd;
  &quot;actuatorMasterDataEndpoint&quot;: &quot;/v1/masterdata/actuator/env&quot;,&#xd;
  &quot;mosip_resident_app_id&quot;: &quot;resident&quot;,&#xd;
  &quot;ridStageStatus&quot;: &quot;v1/admin/packetstatusupdate&quot;,&#xd;
  &quot;getIndividualType&quot;: &quot;/v1/masterdata/individualtypes&quot;,&#xd;
  &quot;getDocType_DocCatByAppID&quot;: &quot;/v1/masterdata/applicanttype/{applicantId}/languages&quot;,&#xd;
  &quot;FetchRegCent_loc_lang_URI&quot;: &quot;/v1/masterdata/getlocspecificregistrationcenters/{langcode}/{locationcode}&quot;,&#xd;
  &quot;threadCount&quot;: &quot;8&quot;,&#xd;
  &quot;FetchHolidays_id_URI&quot;: &quot;/v1/masterdata/holidays/{holidayid}&quot;,&#xd;
  &quot;consent&quot;: &quot;&quot;,&#xd;
  &quot;mosip_pms_client_id&quot;: &quot;mosip-pms-client&quot;,&#xd;
  &quot;FetchApplication_id_lang_URI&quot;: &quot;/v1/masterdata/applicationtypes/{code}/{langcode}&quot;,&#xd;
  &quot;IDSchemaVersion&quot;: &quot;IDSchemaVersion&quot;,&#xd;
  &quot;mosip_testrig_client_id&quot;: &quot;mosip-testrig-client&quot;,&#xd;
  &quot;mosip_hotlist_client_id&quot;: &quot;mosip-hotlist-client&quot;,&#xd;
  &quot;name&quot;: &quot;fullName&quot;,&#xd;
  &quot;mosip.test.regclient.userid&quot;: &quot;kido1&quot;,&#xd;
  &quot;introducerName&quot;: &quot;introducerName&quot;,&#xd;
  &quot;FetchLocationHierarchy_URI_locationcode&quot;: &quot;/v1/masterdata/locations/{locationcode}/{langcode}&quot;,&#xd;
  &quot;roles&quot;: &quot;GLOBAL_ADMIN,ID_AUTHENTICATION,REGISTRATION_ADMIN,REGISTRATION_SUPERVISOR,ZONAL_ADMIN,AUTH_PARTNER,PARTNER_ADMIN,PMS_ADMIN,POLICYMANAGER,REGISTRATION_SUPERVISOR,DATA_READ&quot;,&#xd;
  &quot;AuthAppID&quot;: &quot;resident&quot;,&#xd;
  &quot;preregValidateOtp&quot;: &quot;/preregistration/v1/login/validateOtp&quot;,&#xd;
  &quot;actuatorEndpoint&quot;: &quot;/resident/v1/actuator/env&quot;,&#xd;
  &quot;new_Resident_Password&quot;: &quot;mosip123&quot;,&#xd;
  &quot;validateBindingEndpoint&quot;: &quot;esignet-binding&quot;,&#xd;
  &quot;getApplicantType&quot;: &quot;/v1/masterdata/getApplicantType&quot;,&#xd;
  &quot;mosip_resident_client_secret&quot;: &quot;tdSuXvF4L9oMSoR4&quot;,&#xd;
  &quot;servicesNotDeployed&quot;: &quot;&quot;,&#xd;
  &quot;auditActuatorEndpoint&quot;: &quot;/v1/auditmanager/actuator/info&quot;,&#xd;
  &quot;AuthClientSecret&quot;: &quot;Vz7FJnaGZHZLDR7r&quot;,&#xd;
  &quot;FetchLocationHierarchy_URI_withlangCode&quot;: &quot;/v1/masterdata/locations/{langcode}&quot;,&#xd;
  &quot;reportLogPath&quot;: &quot;automationLogAndReport&quot;,&#xd;
  &quot;mosip_regclient_app_id&quot;: &quot;registrationclient&quot;,&#xd;
  &quot;FetchBlackListedWord_URI&quot;: &quot;/v1/masterdata/blacklistedwords/{langcode}&quot;,&#xd;
  &quot;invalidCertFlag&quot;: false,&#xd;
  &quot;mosip.test.baseurl&quot;: &quot;https://api-internal.cellbox.mosip.net/&quot;,&#xd;
  &quot;mountPath&quot;: &quot;C:/Users/61091460/Documents/centralized/mountvolume&quot;,&#xd;
  &quot;mosip.version&quot;: &quot;1.2&quot;,&#xd;
  &quot;mosip_idrepo_client_secret&quot;: &quot;exurTMHr0MtPmGnX&quot;,&#xd;
  &quot;keycloak-realm-id&quot;: &quot;mosip&quot;,&#xd;
  &quot;mosip.test.persona.irisdatapath&quot;: &quot;/profile_resource/iris_data/&quot;,&#xd;
  &quot;invalidCheckSum&quot;: &quot;&quot;,&#xd;
  &quot;prereg.password&quot;: &quot;Techno@123&quot;,&#xd;
  &quot;s3-user-secret&quot;: &quot;GHb4MxiMPd&quot;,&#xd;
  &quot;prereg.operatorId&quot;: &quot;kido1&quot;,&#xd;
  &quot;esignetWellKnownEndPoint&quot;: &quot;/v1/esignet/oidc/.well-known/openid-configuration&quot;,&#xd;
  &quot;preregSendOtp&quot;: &quot;/preregistration/v1/login/sendOtp/langcode&quot;,&#xd;
  &quot;publicKey&quot;: &quot;MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnkuJmoLUkpO5nGlLs8nZdpdzMHsBv03DQTqBZzxNgmE6H1FGIupdQwAflmE68btbAzJmmwyvOBCbjtyntyP6Zaf1Z2dzV8olFlCPaBXDCgckJzIXxxQnGYzgRfjmCvywnvLAGochqQmimxGejtS+5thU0FX//0p1WU4Zi7pzptOLb4jrXCPoBMZ5sbCGycgMyml5Q5dNtRIvMUvw6zGXutU+9fYiVFQ3d0SdJMXk15ygXyydvRLaYZ7gUdoIu7nbFV1eONJbtmsi+OVZrdc2+UzPqTHVRr1ovYUTOkm7Kz39QmlxeRo8Aos3keCIgjZTl/zH+nFJwQLm+STiLhEkiwIDAQAB&quot;,&#xd;
  &quot;mosip_admin_client_secret&quot;: &quot;qYziJn7sXppeBCUp&quot;,&#xd;
  &quot;attempt&quot;: &quot;10&quot;,&#xd;
  &quot;centerId1&quot;: &quot;13859&quot;,&#xd;
  &quot;usermasterdata-0&quot;: &quot;masterdata-testpt0&quot;,&#xd;
  &quot;fetchImmediateChildLocation&quot;: &quot;/v1/masterdata/locations/immediatechildren/{locationcode}/{langcode}&quot;,&#xd;
  &quot;fetchIncrementalData&quot;: &quot;/v1/syncjob/syncjobdef&quot;,&#xd;
  &quot;s3-user-key&quot;: &quot;admin&quot;,&#xd;
  &quot;uingenerator&quot;: &quot;/v1/idgenerator/uin&quot;,&#xd;
  &quot;keycloak_Password&quot;: &quot;fxbB94btUZ&quot;,&#xd;
  &quot;reportExpirationInDays&quot;: &quot;3&quot;,&#xd;
  &quot;preconfiguredOtp&quot;: &quot;111111&quot;,&#xd;
  &quot;mosip.test.persona.documentsdatapath&quot;: &quot;/profile_resource/documents_data/templates/&quot;,&#xd;
  &quot;fetchmasterdata&quot;: &quot;/v1/syncdata/masterdata&quot;,&#xd;
  &quot;FetchHolidays_URI&quot;: &quot;/v1/masterdata/holidays&quot;,&#xd;
  &quot;generatePrivateKey&quot;: false,&#xd;
  &quot;RIDGenerator_URI&quot;: &quot;/v1/ridgenerator/generate/rid/{centerid}/{machineid}&quot;,&#xd;
  &quot;FetchDeviceSpec_id_lang_URI&quot;: &quot;/v1/masterdata/devicespecifications/{langcode}/{devicetypecode}&quot;,&#xd;
  &quot;audit_password&quot;: &quot;G7zMqBaSJg&quot;,&#xd;
  &quot;introducerRID&quot;: &quot;introducerRID&quot;,&#xd;
  &quot;regclient.centerid&quot;: &quot;13859&quot;,&#xd;
  &quot;mosip_hotlist_app_id&quot;: &quot;hotlist&quot;,&#xd;
  &quot;zoneMappingUrl&quot;: &quot;/v1/masterdata/zoneuser&quot;,&#xd;
  &quot;zoneMappingActivateUrl&quot;: &quot;/v1/masterdata/zoneuser&quot;,&#xd;
  &quot;urlBase&quot;: &quot;https://api-internal.cellbox.mosip.net/&quot;,&#xd;
  &quot;authCertsPath&quot;: &quot;C:/Users/61091460/AppData/Local/Temp/AUTHCERTS&quot;,&#xd;
  &quot;new_Resident_Role&quot;: &quot;default-roles-mosip,PARTNER_ADMIN&quot;,&#xd;
  &quot;dob&quot;: &quot;dateOfBirth&quot;,&#xd;
  &quot;db-su-user&quot;: &quot;postgres&quot;,&#xd;
  &quot;keycloak-external-url&quot;: &quot;https://iam.cellbox.mosip.net&quot;,&#xd;
  &quot;pwd&quot;: &quot;Techno@123&quot;,&#xd;
  &quot;fetchRegCenter&quot;: &quot;/v1/masterdata/registrationcenters/validate/{id}/{langCode}/{timestamp}&quot;,&#xd;
  &quot;zoneCode&quot;: &quot;TZT&quot;,&#xd;
  &quot;postgresqlUser&quot;: &quot;postgresql&quot;,&#xd;
  &quot;gender&quot;: &quot;gender&quot;,&#xd;
  &quot;uploadpublickey&quot;: &quot;/v1/syncdata/tpm/publickey&quot;,&#xd;
  &quot;admin_zone_userName&quot;: &quot;globaladmin&quot;,&#xd;
  &quot;langCode&quot;: &quot;eng&quot;,&#xd;
  &quot;getRIDByUserId&quot;: &quot;/v1/authmanager/rid/{appid}/{userid}&quot;,&#xd;
  &quot;master_db_schema&quot;: &quot;master&quot;,&#xd;
  &quot;mosip_admin_client_id&quot;: &quot;mosip-admin-client&quot;,&#xd;
  &quot;otpNotifier&quot;: &quot;/v1/otpnotifier/otp/send&quot;,&#xd;
  &quot;resident_esignet&quot;: &quot;v1/esignet/actuator/health&quot;,&#xd;
  &quot;SyncPublicKeyToRegClient_URI&quot;: &quot;/v1/keymanager/publickey/&quot;,&#xd;
  &quot;validateLocationByName&quot;: &quot;/v1/masterdata/locations/validate/{locationname}&quot;,&#xd;
  &quot;individualBiometrics&quot;: &quot;individualBiometrics&quot;,&#xd;
  &quot;FetchRegCent_prox_lang_URI&quot;: &quot;/v1/masterdata/getcoordinatespecificregistrationcenters/{langcode}/{longitude}/{latitude}/{proximitydistance}&quot;,&#xd;
  &quot;mosip_reg_client_secret&quot;: &quot;JQSBi6Gb6UJBKARw&quot;,&#xd;
  &quot;userCenterMappingUrl&quot;: &quot;/v1/masterdata/usercentermapping&quot;,&#xd;
  &quot;machineSpecId&quot;: &quot;0c0e49eb-7b05-453e-a107-083ec51f8586&quot;,&#xd;
  &quot;invalidIdSchemaFlag&quot;: &quot;&quot;,&#xd;
  &quot;hibernate.current_session_context_class&quot;: &quot;thread&quot;,&#xd;
  &quot;FetchRegCentHistory_URI&quot;: &quot;/v1/masterdata/registrationcentershistory/{registrationCenterId}/{langcode}/{effectiveDate}&quot;,&#xd;
  &quot;user1&quot;: &quot;kido1&quot;,&#xd;
  &quot;ida_db_schema&quot;: &quot;ida&quot;,&#xd;
  &quot;user0&quot;: &quot;kido0&quot;,&#xd;
  &quot;appendedkey&quot;: &quot;1&quot;,&#xd;
  &quot;partner_url&quot;: &quot;jdbc:postgresql://api-internal.dev2.mosip.net:30090/mosip_ida&quot;,&#xd;
  &quot;licKeyGenerator&quot;: &quot;/v1/keymanager/license/generate&quot;,&#xd;
  &quot;FetchGenderType_URI&quot;: &quot;/v1/masterdata/gendertypes&quot;,&#xd;
  &quot;installation-domain&quot;: &quot;&quot;,&#xd;
  &quot;mosip_hotlist_client_secret&quot;: &quot;2nZ8Nbw5Pa43uBNy&quot;,&#xd;
  &quot;FetchMachine_URI&quot;: &quot;/v1/masterdata/machines&quot;,&#xd;
  &quot;iam-users-to-create&quot;: &quot;111997,111998,220005,111992,globaladmin&quot;,&#xd;
  &quot;syncMdatawithKeyIndex&quot;: &quot;/v1/syncdata/clientsettings&quot;,&#xd;
  &quot;actuatorAdminEndpoint&quot;: &quot;/v1/admin/actuator/env&quot;,&#xd;
  &quot;FetchBiometricAttribute_URI&quot;: &quot;/v1/masterdata/getbiometricattributesbyauthtype/{langcode}/{biometrictypecode}&quot;,&#xd;
  &quot;encrypt_URI&quot;: &quot;/v1/keymanager/encrypt&quot;,&#xd;
  &quot;hibernate.connection.pool_size&quot;: &quot;1&quot;,&#xd;
  &quot;partner_password&quot;: &quot;G7zMqBaSJg&quot;,&#xd;
  &quot;reportIgnoredTestCases&quot;: &quot;no&quot;,&#xd;
  &quot;hibernate.dialect&quot;: &quot;org.hibernate.dialect.PostgreSQLDialect&quot;,&#xd;
  &quot;mosip_regproc_client_id&quot;: &quot;mosip-regproc-client&quot;,&#xd;
  &quot;emailId&quot;: &quot;email&quot;,&#xd;
  &quot;OTPValidation&quot;: &quot;/v1/otpmanager/otp/validate&quot;,&#xd;
  &quot;machineName&quot;: &quot;DSL0327152708202&quot;,&#xd;
  &quot;userpassword&quot;: &quot;Techno@123&quot;,&#xd;
  &quot;EmailNotification_URI&quot;: &quot;/v1/notifier/email/send&quot;,&#xd;
  &quot;roles.111995&quot;: &quot;PARTNER_ADMIN,default-roles-mosip&quot;,&#xd;
  &quot;otpTargetEmail&quot;: &quot;prereg-dsl9@gmail.com&quot;,&#xd;
  &quot;roles.111997&quot;: &quot;AUTH_PARTNER,PARTNER_ADMIN,PMS_ADMIN,POLICYMANAGER,REGISTRATION_SUPERVISOR&quot;,&#xd;
  &quot;current_session_context_class&quot;: &quot;thread&quot;,&#xd;
  &quot;currentUserURI&quot;: &quot;/#/uinservices/viewhistory&quot;,&#xd;
  &quot;fetchDeviceHistory&quot;: &quot;/v1/masterdata/deviceshistories/{id}/{langcode}/{effdatetimes}&quot;,&#xd;
  &quot;driver_class&quot;: &quot;org.postgresql.Driver&quot;,&#xd;
  &quot;templateIDMeta&quot;: &quot;/profile_resource/templates_data/IDMetaInfo.json&quot;,&#xd;
  &quot;FetchTemplate_lang_URI&quot;: &quot;/v1/masterdata/templates/{langcode}&quot;,&#xd;
  &quot;FetchMachine_id_lang_URI&quot;: &quot;/v1/masterdata/machines/{id}/{langcode}&quot;,&#xd;
  &quot;audit_default_schema&quot;: &quot;audit&quot;,&#xd;
  &quot;db-port&quot;: &quot;5432&quot;,&#xd;
  &quot;pms_db_schema&quot;: &quot;pms&quot;,&#xd;
  &quot;uploaddocument&quot;: &quot;preregistration/v1/documents/&quot;,&#xd;
  &quot;iam-users-password&quot;: &quot;mosip123,mosip123,mosip123,mosip123,mosip123&quot;,&#xd;
  &quot;admin_password&quot;: &quot;Techno@123&quot;,&#xd;
  &quot;authDemoServicePort&quot;: &quot;80&quot;,&#xd;
  &quot;getDocTypeDocCatByLangCode&quot;: &quot;/v1/masterdata/validdocuments/{languagecode}&quot;,&#xd;
  &quot;FetchIDlist_URI&quot;: &quot;/v1/masterdata/idtypes/{langcode}&quot;,&#xd;
  &quot;audit_db_schema&quot;: &quot;audit&quot;,&#xd;
  &quot;mosip.test.regclient.centerid&quot;: &quot;13859&quot;,&#xd;
  &quot;FetchMachine_lang_URI&quot;: &quot;/v1/masterdata/machines/{langcode}&quot;,&#xd;
  &quot;CentetMachineUserMappingToMasterData_uri&quot;: &quot;/v1/masterdata/registrationmachineusermappings&quot;,&#xd;
  &quot;fetchmasterdatawithRID&quot;: &quot;/v1/syncdata/masterdata/{regcenterId}&quot;,&#xd;
  &quot;OTPGeneration&quot;: &quot;/v1/otpmanager/otp/generate&quot;,&#xd;
  &quot;AuthClientID&quot;: &quot;mosip-resident-client&quot;,&#xd;
  &quot;FetchRegCent_hir_name_lang_URI&quot;: &quot;/v1/masterdata/registrationcenters/{langcode}/{hierarchylevel}/{name}&quot;,&#xd;
  &quot;mosip.test.temp&quot;: &quot;/packets/&quot;,&#xd;
  &quot;authenticationInternal&quot;: &quot;/v1/authmanager/authenticate/internal/useridPwd&quot;,&#xd;
  &quot;enableDebug&quot;: &quot;no&quot;,&#xd;
  &quot;km_db_schema&quot;: &quot;keymgr&quot;,&#xd;
  &quot;FetchTemplate_id_lang_URI&quot;: &quot;/v1/masterdata/templates/{langcode}/{templatetypecode}&quot;,&#xd;
  &quot;postgresql-password&quot;: &quot;d52kjJuxp2&quot;,&#xd;
  &quot;scenariosToExecute&quot;: &quot;2&quot;,&#xd;
  &quot;keycloak_UserName&quot;: &quot;admin&quot;,&#xd;
  &quot;FetchTemplate_URI&quot;: &quot;/v1/masterdata/templates&quot;,&#xd;
  &quot;changeSupervisorNameToDiffCase&quot;: false,&#xd;
  &quot;SmsNotification_URI&quot;: &quot;/v1/notifier/sms/send&quot;,&#xd;
  &quot;introducerUIN&quot;: &quot;introducerUIN&quot;,&#xd;
  &quot;mosip_admin_app_id&quot;: &quot;admin&quot;,&#xd;
  &quot;FetchBiometricAuthType_URI&quot;: &quot;/v1/masterdata/biometrictypes/{langcode}&quot;,&#xd;
  &quot;fetchRegistrationCenterDeviceHistory&quot;: &quot;/v1/masterdata/registrationcenterdevicehistory/{regcenterid}/{deviceid}/{effdatetimes}&quot;,&#xd;
  &quot;master_default_schema&quot;: &quot;master&quot;,&#xd;
  &quot;OTPTimeOut&quot;: &quot;181&quot;,&#xd;
  &quot;hibernate.show_sql&quot;: &quot;true&quot;,&#xd;
  &quot;mosip.test.persona.fingerprintdatapath&quot;: &quot;/profile_resource/fp_data&quot;,&#xd;
  &quot;admin_zone_appid&quot;: &quot;admin&quot;,&#xd;
  &quot;mosip_pms_client_secret&quot;: &quot;YjARhfth5qXZ59QW&quot;,&#xd;
  &quot;mosip.test.prereg.centerid&quot;: &quot;10005&quot;,&#xd;
  &quot;mosip.test.persona.namesdatapath&quot;: &quot;/profile_resource/names_data&quot;,&#xd;
  &quot;mosip_testrig_client_secret&quot;: &quot;updIbxWRaEseNjc8&quot;,&#xd;
  &quot;authentication&quot;: &quot;/v1/authmanager/authenticate/useridPwd&quot;,&#xd;
  &quot;policytest_userName&quot;: &quot;111998&quot;,&#xd;
  &quot;authDemoServiceBaseURL&quot;: &quot;http://authdemo.authdemo&quot;,&#xd;
  &quot;useridOTP&quot;: &quot;/v1/authmanager/authenticate/useridOTP&quot;,&#xd;
  &quot;partner_default_schema&quot;: &quot;partner&quot;,&#xd;
  &quot;policytest_password&quot;: &quot;mosip123&quot;,&#xd;
  &quot;usePreConfiguredOtp&quot;: &quot;true&quot;,&#xd;
  &quot;FetchDocumentTypes_URI&quot;: &quot;/v1/masterdata/documenttypes/{documentcategorycode}/{langcode}&quot;,&#xd;
  &quot;authclientidsecretkeyURL&quot;: &quot;/v1/authmanager/authenticate/clientidsecretkey&quot;,&#xd;
  &quot;mapLicenseKey&quot;: &quot;/v1/keymanager/license/permission&quot;,&#xd;
  &quot;validUIN&quot;: &quot;createnew&quot;,&#xd;
  &quot;tokenIdGenerator_URI&quot;: &quot;/v1/keymanager/{uin}/{partnercode}&quot;,&#xd;
  &quot;mosip.test.regclient.supervisorpwd&quot;: &quot;Techno@123&quot;,&#xd;
  &quot;mosip.test.regclient.machineid&quot;: &quot;13670&quot;,&#xd;
  &quot;deleteMockAbisExpectations&quot;: &quot;v1/mock-abis-service/config/expectation&quot;,&#xd;
  &quot;mosip.test.regclient.password&quot;: &quot;Techno@123&quot;,&#xd;
  &quot;centerId2&quot;: &quot;13860&quot;,&#xd;
  &quot;user2&quot; : &quot;kido2&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${packetUtilityServerIP}</stringProp>
          <stringProp name="HTTPSampler.port">${packetUtilityPortNo}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/packetcreator/context/server/${contextKeyValue}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Packet Generation (Execution)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Persona Endpoint API" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;requests&quot;: {&#xd;
    &quot;PR_ResidentAttribute&quot;: {&#xd;
      &quot;Iris&quot;: &quot;true&quot;,&#xd;
      &quot;Finger&quot;: &quot;true&quot;,&#xd;
      &quot;Gender&quot;: &quot;Female&quot;,&#xd;
      &quot;Face&quot;: &quot;true&quot;,&#xd;
      &quot;Age&quot;: &quot;RA_Adult&quot;&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${packetUtilityServerIP}</stringProp>
          <stringProp name="HTTPSampler.port">${packetUtilityPortNo}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/packetcreator/resident/1/${contextKeyValue}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1652716397">&quot;status&quot;:&quot;SUCCESS</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Persona Path" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">personaPath</stringProp>
            <stringProp name="RegexExtractor.regex">path&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">personaPath not found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Document To Persona Endpoint API" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&quot;personaFilePath&quot;:&quot;${personaPath}&quot;,&quot;updateAttributeList&quot;:{ &quot;POA&quot;: &quot;{\&quot;typeCode\&quot;: \&quot;DOC016\&quot;,\&quot;docPath\&quot;: \&quot;${docPath}\&quot;}&quot;}}]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${packetUtilityServerIP}</stringProp>
          <stringProp name="HTTPSampler.port">${packetUtilityPortNo}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/packetcreator/persona/regenerateOrMissingAttribute/${contextKeyValue}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-585137058">{Sucess}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Packet Template Endpoint API" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;personaFilePath&quot;: [&#xd;
    &quot;${personaPath}&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${packetUtilityServerIP}</stringProp>
          <stringProp name="HTTPSampler.port">${packetUtilityPortNo}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/packetcreator/packet/template/${process}/81/true/${contextKeyValue}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-644104290">{&quot;path&quot;:&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Template Path" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">templatePath</stringProp>
            <stringProp name="RegexExtractor.regex">path&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">templatePath not found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Generate Packet Endpoint API" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
{&quot;personaFilePath&quot;:[&quot;${templatePath}&quot;,&#xd;
&quot;${personaPath}&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${packetUtilityServerIP}</stringProp>
          <stringProp name="HTTPSampler.port">${packetUtilityPortNo}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/packetcreator/packet/sync/0/true/1/${contextKeyValue}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2033296166">{&quot;response&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract regID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">regID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;registrationId&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">registrationId not found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Zip Packet Endpoint API" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;process&quot;: &quot;${process}&quot;,&#xd;
  &quot;idJsonPath&quot;: &quot;${templatePath}/REGISTRATION_CLIENT/NEW/rid_id/ID.json&quot;,&#xd;
  &quot;source&quot;: &quot;REGISTRATION_CLIENT&quot;,&#xd;
  &quot;templatePath&quot;: &quot;${templatePath}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${packetUtilityServerIP}</stringProp>
          <stringProp name="HTTPSampler.port">${packetUtilityPortNo}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/packetcreator/packetcreator/${contextKeyValue}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">http://localhost:8080/</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract packetPath" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">packetPath</stringProp>
            <stringProp name="RegexExtractor.regex">(?s)(^.+$)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">packetPath not found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Replacing Slashes from temp packetPath" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.io.File;
import java.io.IOException;
import org.apache.commons.io.FileUtils;


String file = vars.get(&quot;packetPath&quot;);
String path = file.replaceAll(&quot;\\\\&quot;, &quot;/&quot;);
vars.put(&quot;newPath&quot;, path);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Store Packet Path to file " enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">${__StringToFile(store_packet_path.txt,${newPath}\,${process}\,${regID}\n,true,)}</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">Generate_Packet_try.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
